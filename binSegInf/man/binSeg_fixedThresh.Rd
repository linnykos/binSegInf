% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binSeg_fixedThresh.R
\name{binSeg_fixedThresh}
\alias{binSeg_fixedThresh}
\title{Main function for binary segmentation for fixed threshold. This is actually
a wrapper for binary segmentation with fixed threshold. It creates an
environment and creates the variables there, then runs
binseg.by.thresh.inner() all in this environment, and returns the relevant
guy}
\usage{
binSeg_fixedThresh(y, thresh, s = 1, e = length(y), verbose = FALSE,
  return.env = FALSE, numIntervals = NULL)
}
\arguments{
\item{y}{The original data.}

\item{thresh}{Threshold for \deqn{\tilde{X}}. This serves as a stopping rule
for the recursion.}

\item{s}{Starting index, in the vector-valued data. Must be an integer
larger than or equal to 1, and strictly smaller than \code{e}.}

\item{e}{Ending index, in the vector-valued data. Must be an integer smaller
than or equal to \code{n}, and strictly larger than \code{s}.}

\item{verbose}{Set to true if you'd like to see algorithm progression.}

\item{return.env}{Set to true if you'd like to get the environment
containing the algorithm output, instead of a list.}
}
\description{
Main function for binary segmentation for fixed threshold. This is actually
a wrapper for binary segmentation with fixed threshold. It creates an
environment and creates the variables there, then runs
binseg.by.thresh.inner() all in this environment, and returns the relevant
guy
}
